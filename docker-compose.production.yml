version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: convocart-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env.production
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://convocart_user:${DB_PASSWORD}@db:5432/convocart_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - convocart-network
    volumes:
      - media_data:/app/media
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    container_name: convocart-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: convocart_db
      POSTGRES_USER: convocart_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - convocart-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U convocart_user -d convocart_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: convocart-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - convocart-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: convocart-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - media_data:/var/www/media:ro
    depends_on:
      - app
    networks:
      - convocart-network

  backup:
    image: postgres:15-alpine
    container_name: convocart-backup
    restart: "no"
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - convocart-network
    command: >
      sh -c "
        echo 'Starting backup service...' &&
        while true; do
          pg_dump -h db -U convocart_user -d convocart_db > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql &&
          echo 'Backup completed at $$(date)' &&
          find /backups -name '*.sql' -mtime +7 -delete &&
          sleep 86400
        done
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  media_data:
    driver: local
  app_logs:
    driver: local

networks:
  convocart-network:
    driver: bridge